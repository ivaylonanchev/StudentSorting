// <auto-generated />
using System;
using DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataLayer.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    partial class ProjectDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("BusinessLayer.Competition", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Competitions");
                });

            modelBuilder.Entity("BusinessLayer.CompetitionScore", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CompetitionId")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<int?>("ProfileID")
                        .HasColumnType("int");

                    b.Property<string>("StudentEGN")
                        .HasColumnType("varchar(767)");

                    b.HasKey("ID");

                    b.HasIndex("CompetitionId");

                    b.HasIndex("ProfileID");

                    b.HasIndex("StudentEGN");

                    b.ToTable("CompetitionScores");
                });

            modelBuilder.Entity("BusinessLayer.Profile", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Accepted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ApplicationSubmited")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Rating")
                        .HasColumnType("double");

                    b.HasKey("ID");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("BusinessLayer.Student", b =>
                {
                    b.Property<string>("EGN")
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<char>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Profile_FKID")
                        .HasColumnType("int");

                    b.HasKey("EGN");

                    b.HasIndex("Profile_FKID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("BusinessLayer.CompetitionScore", b =>
                {
                    b.HasOne("BusinessLayer.Competition", "Competition_FK")
                        .WithMany("StudentsScore")
                        .HasForeignKey("CompetitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessLayer.Profile", null)
                        .WithMany("PointsPerCompetition")
                        .HasForeignKey("ProfileID");

                    b.HasOne("BusinessLayer.Student", "Student_FK")
                        .WithMany("CompetitionScores")
                        .HasForeignKey("StudentEGN");

                    b.Navigation("Competition_FK");

                    b.Navigation("Student_FK");
                });

            modelBuilder.Entity("BusinessLayer.Student", b =>
                {
                    b.HasOne("BusinessLayer.Profile", "Profile_FK")
                        .WithMany()
                        .HasForeignKey("Profile_FKID");

                    b.Navigation("Profile_FK");
                });

            modelBuilder.Entity("BusinessLayer.Competition", b =>
                {
                    b.Navigation("StudentsScore");
                });

            modelBuilder.Entity("BusinessLayer.Profile", b =>
                {
                    b.Navigation("PointsPerCompetition");
                });

            modelBuilder.Entity("BusinessLayer.Student", b =>
                {
                    b.Navigation("CompetitionScores");
                });
#pragma warning restore 612, 618
        }
    }
}
